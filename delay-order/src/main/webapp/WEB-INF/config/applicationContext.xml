<?xml version="1.0" encoding="UTF-8"?>
<!-- 查找最新的schemaLocation 访问 http://www.springframework.org/schema/ -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<aop:aspectj-autoproxy />

	<!-- 配置扫描路径 -->
	<context:component-scan base-package="com.dongzhic">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

    <!--配置数据库连接属性-->
    <context:property-placeholder></context:property-placeholder>
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://60.60.1.71:3306/test_db?serverTimezone=GMT%2b8&amp;autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;autocommit=false"/>
        <property name="username" value="dzc"/>
        <property name="password" value="123456"/>
        <property name="initialSize" value="10" />
        <property name="maxTotal" value="100" />
        <property name="maxIdle" value="100" />
        <property name="maxWaitMillis" value="-1" />
    </bean>

    <!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接对象-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 数据访问接口对应的 SQL 实现 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
        <!--加载mybatis配置文件 这里mybatis配置文件的工作都在spring中配置了所以mybatis只是配置别名就可以-->
        <property name="configLocation" value="classpath:config/mybatisconfig.xml"/>
    </bean>

    <!-- mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描的包，如果要扫描多个，中间用,隔开 -->
        <property name="basePackage" value="com.dongzhic.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!-- 开启spring的事物管理功能 -->
    <bean id="transactionManager"
    	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 使用注解管理事物 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

	<!-- rocketMq生产者配置 -->
	<bean id="rocketMQProducer" class="com.dongzhic.service.mq.RocketMQProducer"
		  init-method="init" destroy-method="destroy">
		<property name="producerGroup" value="DelayOrderProducer" />
		<property name="namesrvAddr" value="60.60.1.61:9876" />
	</bean>

	<!-- 消费者监听 -->
	<bean id="messageListeners" class="com.dongzhic.service.mq.MessageListenerImpl"></bean>

	<!-- 消费者配置 -->
	<bean id="rocketmqConsumer" class="org.apache.rocketmq.client.consumer.DefaultMQPushConsumer"
		  init-method="start" destroy-method="shutdown">
		<property name="consumerGroup" value="TimeOrderGroup" />
		<property name="namesrvAddr" value="60.60.1.61:9876" />
		<property name="messageModel" value="CLUSTERING" />
		<property name="consumeFromWhere" value="CONSUME_FROM_LAST_OFFSET" />
		<property name="messageListener" ref="messageListeners" />

		<property name="subscription">
			<map>
				<entry key="TimeOrder" value="*" />
			</map>
		</property>
	</bean>

</beans>
